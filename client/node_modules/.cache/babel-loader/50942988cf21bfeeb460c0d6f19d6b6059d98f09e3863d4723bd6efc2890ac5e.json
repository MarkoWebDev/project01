{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\purge\\\\OneDrive\\\\Desktop\\\\React stuff\\\\React News Ars\\\\news-app\\\\src\\\\modules\\\\Tabs\\\\TabsButtons.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/tabsButtons.scss\";\nimport { Tooltip } from \"react-tooltip\";\nimport useMediaQuery from \"../../shared/MediaQueryHook/MediaQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabsButtons = _ref => {\n  _s();\n  let {\n    tabButtons,\n    handleSelect,\n    selected\n  } = _ref;\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-section\",\n      children: tabButtons.map(button => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: selected === parseInt(button.id) ? \"tab-active \" : \"tab \",\n          onClick: () => handleSelect(parseInt(button.id)),\n          \"data-tooltip-id\": \"my-tooltip\",\n          \"data-tooltip-content\": button.name,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            id: \"my-tooltip\",\n            place: \"bottom\",\n            variant: \"dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"tab-text\",\n            className: \"tab-text\",\n            children: button.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, button.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TabsButtons, \"7khsyUHgctuHIPa2/KlDS6LcnT0=\", false, function () {\n  return [useMediaQuery];\n});\n_c = TabsButtons;\nexport default TabsButtons;\nvar _c;\n$RefreshReg$(_c, \"TabsButtons\");","map":{"version":3,"names":["Tooltip","useMediaQuery","jsxDEV","_jsxDEV","TabsButtons","_ref","_s","tabButtons","handleSelect","selected","isMobile","children","className","map","button","parseInt","id","onClick","name","place","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/purge/OneDrive/Desktop/React stuff/React News Ars/news-app/src/modules/Tabs/TabsButtons.tsx"],"sourcesContent":["import { FC } from \"react\";\r\nimport \"../../styles/tabsButtons.scss\";\r\nimport { Tooltip } from \"react-tooltip\";\r\nimport useMediaQuery from \"../../shared/MediaQueryHook/MediaQuery\";\r\n\r\ninterface TabsButtonsProps {\r\n  tabButtons: {\r\n    id: string;\r\n    name: string;\r\n    content: string;\r\n  }[];\r\n  handleSelect: (id: number) => void;\r\n  selected: number;\r\n}\r\n\r\nconst TabsButtons: FC<TabsButtonsProps> = ({\r\n  tabButtons,\r\n  handleSelect,\r\n  selected,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\r\n  return (\r\n    <div>\r\n      <div className=\"tab-section\">\r\n        {tabButtons.map((button: { id: string; name: string }) => {\r\n          return (\r\n            <div\r\n              className={\r\n                selected === parseInt(button.id) ? \"tab-active \" : \"tab \"\r\n              }\r\n              key={button.id}\r\n              onClick={() => handleSelect(parseInt(button.id))}\r\n              data-tooltip-id=\"my-tooltip\"\r\n              data-tooltip-content={button.name}\r\n            >\r\n              <Tooltip id=\"my-tooltip\" place=\"bottom\" variant=\"dark\" />\r\n              <p id=\"tab-text\" className=\"tab-text\">\r\n                {button.name}\r\n              </p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsButtons;\r\n"],"mappings":";;AACA,OAAO,+BAA+B;AACtC,SAASA,OAAO,QAAQ,eAAe;AACvC,OAAOC,aAAa,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYnE,MAAMC,WAAiC,GAAGC,IAAA,IAIpC;EAAAC,EAAA;EAAA,IAJqC;IACzCC,UAAU;IACVC,YAAY;IACZC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAMK,QAAQ,GAAGT,aAAa,CAAC,oBAAoB,CAAC;EACpD,oBACEE,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAKS,SAAS,EAAC,aAAa;MAAAD,QAAA,EACzBJ,UAAU,CAACM,GAAG,CAAEC,MAAoC,IAAK;QACxD,oBACEX,OAAA;UACES,SAAS,EACPH,QAAQ,KAAKM,QAAQ,CAACD,MAAM,CAACE,EAAE,CAAC,GAAG,aAAa,GAAG,MACpD;UAEDC,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACO,QAAQ,CAACD,MAAM,CAACE,EAAE,CAAC,CAAE;UACjD,mBAAgB,YAAY;UAC5B,wBAAsBF,MAAM,CAACI,IAAK;UAAAP,QAAA,gBAElCR,OAAA,CAACH,OAAO;YAACgB,EAAE,EAAC,YAAY;YAACG,KAAK,EAAC,QAAQ;YAACC,OAAO,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzDrB,OAAA;YAAGa,EAAE,EAAC,UAAU;YAACJ,SAAS,EAAC,UAAU;YAAAD,QAAA,EAClCG,MAAM,CAACI;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA,GARCV,MAAM,CAACE,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASX,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9BIF,WAAiC;EAAA,QAKpBH,aAAa;AAAA;AAAAwB,EAAA,GAL1BrB,WAAiC;AAgCvC,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}