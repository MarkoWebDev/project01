{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\purge\\\\OneDrive\\\\Desktop\\\\React stuff\\\\React News Ars\\\\news-app\\\\src\\\\modules\\\\InfiniteScrollNews\\\\InfiniteNews.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useCallback, useEffect } from \"react\";\nimport \"../../styles/infiniteScroll.scss\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteNews = () => {\n  _s();\n  const refEl = useRef(null);\n  const [news, setNews] = useState([]);\n  const [page, setPage] = useState(1);\n  const [prevPage, setPrevPage] = useState(0);\n  const handleScroll = () => {\n    if (refEl.current) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = refEl.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n        setPage(page + 1);\n      }\n    }\n  };\n  const fetchNews = useCallback(async () => {\n    try {\n      const request = await fetch(`http://localhost:5000/api/infiniteNews?page=${page}`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n      const response = await request.json();\n      if (response.status === \"error\") {\n        toast.error(response.code, {\n          position: \"top-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"colored\"\n        });\n      } else {\n        setPrevPage(page);\n        setNews(prev => [...prev, ...response.articles]);\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: \"top-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"colored\"\n      });\n      console.log(error);\n    }\n  }, [page]);\n  useEffect(() => {\n    if (prevPage !== page) {\n      fetchNews();\n    }\n  }, [page, fetchNews, prevPage]);\n  const parseTime = useCallback(time => {\n    const parsedDate = new Date(time).toLocaleDateString();\n    const convertDate = parsedDate.split(\"/\");\n    const day = convertDate[1];\n    const month = convertDate[0];\n    const year = convertDate[2];\n    const parsedTime = new Date(time).toLocaleTimeString(\"hr-HR\", {\n      timeZone: \"Europe/Zagreb\"\n    });\n    const europeanTime = parsedTime.split(\":\");\n    const hours = europeanTime[0];\n    const minutes = europeanTime[1];\n    return `${day}.${month}.${year} ${hours}:${minutes}h`;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infinite-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infinite-body\",\n        onScroll: handleScroll,\n        ref: refEl,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: news === null || news === void 0 ? void 0 : news.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"infinite-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"time\",\n                children: [\"Published: \", parseTime(item.publishedAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text\",\n                children: item === null || item === void 0 ? void 0 : item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteNews, \"YAm2ngfxjJVxijjd/hqYpJFOCLk=\");\n_c = InfiniteNews;\nexport default InfiniteNews;\nvar _c;\n$RefreshReg$(_c, \"InfiniteNews\");","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","toast","jsxDEV","_jsxDEV","InfiniteNews","_s","refEl","news","setNews","page","setPage","prevPage","setPrevPage","handleScroll","current","scrollTop","scrollHeight","clientHeight","fetchNews","request","fetch","method","headers","Accept","response","json","status","error","code","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","prev","articles","message","console","log","parseTime","time","parsedDate","Date","toLocaleDateString","convertDate","split","day","month","year","parsedTime","toLocaleTimeString","timeZone","europeanTime","hours","minutes","children","className","onScroll","ref","map","item","index","publishedAt","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["C:/Users/purge/OneDrive/Desktop/React stuff/React News Ars/news-app/src/modules/InfiniteScrollNews/InfiniteNews.tsx"],"sourcesContent":["import { FC, useState, useRef, useCallback, useEffect } from \"react\";\r\nimport \"../../styles/infiniteScroll.scss\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface InfiniteNewsProps {}\r\n\r\ninterface ArticleProps {\r\n  title: string;\r\n  url: string;\r\n  urlToImage: string | undefined;\r\n  description: string;\r\n  publishedAt: string;\r\n}\r\n\r\nconst InfiniteNews: FC<InfiniteNewsProps> = () => {\r\n  const refEl = useRef<HTMLDivElement>(null);\r\n  const [news, setNews] = useState<ArticleProps[]>([]);\r\n  const [page, setPage] = useState<number>(1);\r\n  const [prevPage, setPrevPage] = useState<number>(0);\r\n\r\n  const handleScroll = () => {\r\n    if (refEl.current) {\r\n      const { scrollTop, scrollHeight, clientHeight } = refEl.current;\r\n      if (scrollTop + clientHeight === scrollHeight) {\r\n        setPage(page + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchNews = useCallback(async () => {\r\n    try {\r\n      const request = await fetch(\r\n        `http://localhost:5000/api/infiniteNews?page=${page}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n        }\r\n      );\r\n      const response = await request.json();\r\n      if (response.status === \"error\") {\r\n        toast.error(response.code, {\r\n          position: \"top-right\",\r\n          autoClose: false,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n        });\r\n      } else {\r\n        setPrevPage(page);\r\n        setNews((prev: ArticleProps[]) => [...prev, ...response.articles]);\r\n      }\r\n    } catch (error: any) {\r\n      toast.error(error.message, {\r\n        position: \"top-right\",\r\n        autoClose: false,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"colored\",\r\n      });\r\n      console.log(error);\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (prevPage !== page) {\r\n      fetchNews();\r\n    }\r\n  }, [page, fetchNews, prevPage]);\r\n\r\n  const parseTime = useCallback((time: string) => {\r\n    const parsedDate = new Date(time).toLocaleDateString();\r\n    const convertDate = parsedDate.split(\"/\");\r\n    const day = convertDate[1];\r\n    const month = convertDate[0];\r\n    const year = convertDate[2];\r\n    const parsedTime = new Date(time).toLocaleTimeString(\"hr-HR\", {\r\n      timeZone: \"Europe/Zagreb\",\r\n    });\r\n    const europeanTime = parsedTime.split(\":\");\r\n    const hours = europeanTime[0];\r\n    const minutes = europeanTime[1];\r\n    return `${day}.${month}.${year} ${hours}:${minutes}h`;\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"infinite-section\">\r\n        <div className=\"infinite-body\" onScroll={handleScroll} ref={refEl}>\r\n          <div>\r\n            {news?.map((item: ArticleProps, index: number) => {\r\n              return (\r\n                <div className=\"infinite-content\" key={index}>\r\n                  <p className=\"time\">\r\n                    Published: {parseTime(item.publishedAt)}\r\n                  </p>\r\n                  <p className=\"text\">{item?.description}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfiniteNews;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}